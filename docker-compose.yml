version: '3.8'

x-environment:
  project_name_dev: &project_name_dev "user-service-dev"

services:
  user-service:
    image: user-service:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - GITHUB_USERNAME=${GITHUB_USERNAME}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    container_name: user-service-dev
    working_dir: /app
    ports:
      - "8080:8081"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      JWT_SECRET: ${JWT_SECRET}
      GUEST_PASSWORD: ${GUEST_PASSWORD}
    depends_on:
      - postgresql_user-service
      - kafka
      - redis

  postgresql_user-service:
    image: postgres:15
    container_name: postgresql_user-service-dev
    environment:
      POSTGRES_DB: UserServiceDB
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka-user-service-dev
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper-user-service-dev
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  redis:
    image: redis:7.0
    container_name: redis-user-service-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: